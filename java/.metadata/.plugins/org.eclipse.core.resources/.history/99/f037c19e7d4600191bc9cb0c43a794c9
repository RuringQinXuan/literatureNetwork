package com.cytoscape.CytoscapeLiteratureNetwork.internal.task;

import java.util.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import org.cytoscape.work.AbstractTask;
import org.cytoscape.work.ObservableTask;
import org.cytoscape.work.TaskMonitor;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
public class BulidNetworkTask extends AbstractTask implements ObservableTask{
	private Network networks;
	private List<String> documents;
	private List<String> entities;
	@Override
	public void run(TaskMonitor arg0) throws Exception {
		// TODO Auto-generated method stub
		String query_metadata = String.join(",", ids.subList(0,subend));
		Map<String, String> args1 = new HashMap<>();
		args1.put("db", "pubmed");
		args1.put("retmode","json");
		args1.put("id",query_metadata);
		
		args1.put("tool","mytool");
		monitor.setStatusMessage("Querying PubMed Metadata");
		JSONObject object1 = HttpUtils.postJSON("localhosr:9000",
				args1);

		JSONObject result1 = (JSONObject) object1.get("result");
		if (result1 == null) {
			monitor.showMessage(TaskMonitor.Level.ERROR,"Pubmed returned no results");
			// System.out.println("object wrong type: "+object.toString());
			return;
		}

		JSONObject pmid_content = (JSONObject)result1.get("result");
		for(String id : ids.subList(0,subend)) {
			pmmd.add(new PubmedMetadata((JSONObject) pmid_content.get(id)));
		}
	}

	@Override
	public <R> R getResults(Class<? extends R> arg0) {
		// TODO Auto-generated method stub
		return null;
	}

}
