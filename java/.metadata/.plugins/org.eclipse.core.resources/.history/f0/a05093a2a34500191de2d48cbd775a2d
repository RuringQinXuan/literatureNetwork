package com.cytoscape.CytoscapeLiteratureNetwork.internal.task;

import org.cytoscape.work.AbstractTask;
import org.cytoscape.work.TaskMonitor;

public class SearchPubmedIDTask extends AbstractTask{


	@Override
	public void run(TaskMonitor monitor) {
		monitor.setTitle("Loading STRING network from PubMed query");
		Map<String, String> args = new HashMap<>();
		args.put("db", "pubmed");
		args.put("retmode","json");
		args.put("retmax","40000");
		args.put("term",query);
		monitor.setTitle("Querying PubMed");
		JSONObject object = HttpUtils.getJSON("https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esearch.fcgi",
				args, manager);
		JSONObject result = ModelUtils.getResultsFromJSON(object, JSONObject.class);
		if (result == null) {
			monitor.showMessage(TaskMonitor.Level.ERROR,"Pubmed returned no results");
			// System.out.println("object wrong type: "+object.toString());
			return;
		}
		JSONObject json = (JSONObject)result.get("esearchresult");
		if (json == null) {
			monitor.showMessage(TaskMonitor.Level.ERROR,"Pubmed returned no results");
			// System.out.println("object doesn't contain esearchresult: "+object.toString());
			return;
		}

		// Get the total number of results
		int count = Integer.parseInt((String)json.get("count"));
		if (count == 0) {
			monitor.showMessage(TaskMonitor.Level.ERROR,"Pubmed returned no results");
			// System.out.println("object doesn't contain count: "+json.toString());
			return;
		}

		JSONArray ids = (JSONArray)json.get("idlist");
	}
	public SearchPubmedIDTask(){

	}
}
